{"version":3,"sources":["icons/Icons.js","components/Login.js","components/Register.js","components/LoginRegister.js","components/Nav.js","components/Home.js","components/Util.js","components/Create.js","components/Browse.js","components/List.js","components/Project.js","components/MyProjects.js","components/ProjectsToDo.js","components/ProjectsManager.js","components/OffersManager.js","components/Admin.js","components/EditProject.js","components/EditOffer.js","components/EditUser.js","components/AddUser.js","App.js","index.js"],"names":["Icon","props","icon","xmlns","viewBox","d","SHA256","require","Login","state","login","password","changeState","bind","handleSubmit","e","target","id","this","setState","value","event","preventDefault","fetch","toString","then","res","json","result","length","sessionStorage","setItem","user_id","role_id","changeStatus","alert","catch","error","console","mail","className","type","onClick","toggle","onSubmit","onChange","required","hideLoginRegister","React","Component","Register","role","body","request","method","headers","JSON","stringify","status","LoginRegister","loginOrRegister","isLogged","toggleLoginRegister","changeLoginStatus","showhideLoginBox","Navigation","class","to","getItem","href","data-toggle","LoginLogout","loginModal","logout","Home","Nav","getRoles","Promise","resolve","log","getSkillsByCategoryId","params","skills","getCategories","getOffers","offers","getProjectsByDate","period","getOffersByDate","getMyProjects","userId","getProjectsToDo","setStatusToDone","projectId","project_id","requestOptions","response","checkIfUserAlreadyPostedOffer","Create","categories","categoryChecked","skillsChecked","title","desc","price","isLoaded","posted","loginButton","previousTarget","secondStep","thirdStep","selectCategory","selectSkill","titleChange","descChange","priceChange","postProject","document","getElementById","style","display","classList","remove","currentTarget","add","getAttribute","checked","indexOf","filter","_","i","category","map","item","key","category_id","name","skill_id","minlength","rows","cols","Browse","pathname","List","location","data","browseProjects","hasError","skill","description","Project","project","author_id","category_name","status_id","loggedUserId","isOwner","offerAdded","canPost","updateProjectStatus","addOffer","statusId","ProjectView","OffersList","chooseOffer","fetchOffersList","offerId","offer_id","updateProjectByChosenOffer","user","width","created_at","estimated_time","message","nextProps","prevState","AddOffer","skillsToSelect","checkboxes","getElementsByClassName","MyProjects","projects","update","contractor","email","ProjectsToDo","ProjectsManager","periodOfData","setPeriodOfData","deleteProject","OffersManager","deleteOffer","offer","Admin","roles","users","deleteUser","getUsers","role_name","EditProject","handleChange","prepareCheckboxes","skills_id","push","categoryId","clearCheckboxes","onChangeCategory","EditOffer","AddUser","newpassword","placeholder","EditUser","selected","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.522f104e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./icons.css\";\r\n\r\nconst Icon = (props) => {\r\n    switch (props.icon) {\r\n        case \"computer\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n                    <path d=\"M624 352h-48V64c0-35.2-28.8-64-64-64H128C92.8 0 64 28.8 64 64v288H16c-8.8 0-16 7.2-16 16v48c0 52.8 43.2 96 96 96h448c52.8 0 96-43.2 96-96v-48c0-8.8-7.2-16-16-16zM112 64c0-8.67 7.33-16 16-16h384c8.67 0 16 7.33 16 16v288H112V64zm480 352c0 26.47-21.53 48-48 48H96c-26.47 0-48-21.53-48-48v-16h180.9c5.57 9.39 15.38 16 27.1 16h128c11.72 0 21.52-6.61 27.1-16H592v16zM277.66 261.65l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.34 58.34c6.25 6.25 16.39 6.25 22.64 0zm73.38-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63z\" />\r\n                </svg>\r\n            );\r\n        case \"mobile\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n                    <path d=\"M192 416c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zM320 48v416c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h224c26.5 0 48 21.5 48 48zm-48 410V54c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v404c0 3.3 2.7 6 6 6h212c3.3 0 6-2.7 6-6z\" />\r\n                </svg>\r\n            );\r\n        case \"writing\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n                    <path d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\" />\r\n                </svg>\r\n            );\r\n        case \"graphic\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M491.609 73.625l-53.861-53.839c-26.378-26.379-69.076-26.383-95.46-.001L24.91 335.089.329 484.085c-2.675 16.215 11.368 30.261 27.587 27.587l148.995-24.582 315.326-317.378c26.33-26.331 26.581-68.879-.628-96.087zM120.644 302l170.259-169.155 88.251 88.251L210 391.355V350h-48v-48h-41.356zM82.132 458.132l-28.263-28.263 12.14-73.587L84.409 338H126v48h48v41.59l-18.282 18.401-73.586 12.141zm378.985-319.533l-.051.051-.051.051-48.03 48.344-88.03-88.03 48.344-48.03.05-.05.05-.05c9.147-9.146 23.978-9.259 33.236-.001l53.854 53.854c9.878 9.877 9.939 24.549.628 33.861z\" />\r\n                </svg>\r\n            );\r\n        case \"data\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 608 512\">\r\n                    <path d=\"M416 320h-64c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zm-16 144h-32v-96h32v96zm176-272h-64c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V224c0-17.67-14.33-32-32-32zm-16 272h-32V240h32v224zM256 192h-64c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V224c0-17.67-14.33-32-32-32zm-16 272h-32V240h32v224zM96 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zM80 464H48v-64h32v64zM64 256c26.51 0 48-21.49 48-48 0-4.27-.74-8.34-1.78-12.28l101.5-101.5C215.66 95.26 219.73 96 224 96c6.15 0 11.97-1.26 17.38-3.37l95.34 76.27c-.35 2.33-.71 4.67-.71 7.1 0 26.51 21.49 48 48 48s48-21.49 48-48c0-2.43-.37-4.76-.71-7.09l95.34-76.27C532.03 94.74 537.85 96 544 96c26.51 0 48-21.49 48-48S570.51 0 544 0s-48 21.49-48 48c0 2.43.37 4.76.71 7.09l-95.34 76.27c-5.4-2.11-11.23-3.37-17.38-3.37s-11.97 1.26-17.38 3.37L271.29 55.1c.35-2.33.71-4.67.71-7.1 0-26.51-21.49-48-48-48s-48 21.49-48 48c0 4.27.74 8.34 1.78 12.28l-101.5 101.5C72.34 160.74 68.27 160 64 160c-26.51 0-48 21.49-48 48s21.49 48 48 48z\" />\r\n                </svg>\r\n            );\r\n        case \"sales\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                    <path d=\"M352 128C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128H0v304c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V128h-96zM224 48c44.112 0 80 35.888 80 80H144c0-44.112 35.888-80 80-80zm176 384c0 17.645-14.355 32-32 32H80c-17.645 0-32-14.355-32-32V176h48v40c0 13.255 10.745 24 24 24s24-10.745 24-24v-40h160v40c0 13.255 10.745 24 24 24s24-10.745 24-24v-40h48v256z\" />\r\n                </svg>\r\n            );\r\n        case \"marketing\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M101.42 352h16.94c6.81 0 12.88-4.32 15.12-10.75l7.38-21.25h70.29l7.38 21.25A16 16 0 0 0 233.65 352h16.94c11.01 0 18.73-10.85 15.12-21.25L212 176.13A24.004 24.004 0 0 0 189.33 160h-26.66c-10.22 0-19.32 6.47-22.67 16.12L86.31 330.75C82.7 341.15 90.42 352 101.42 352zM176 218.78L194.48 272h-36.96L176 218.78zM352 352c9.93 0 19.4-2.02 28.02-5.68 2.94 3.41 7.13 5.68 11.98 5.68h16c8.84 0 16-7.16 16-16V176c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v36.42c-7.54-2.69-15.54-4.42-24-4.42-39.7 0-72 32.3-72 72s32.3 72 72 72zm0-96c13.23 0 24 10.77 24 24s-10.77 24-24 24-24-10.77-24-24 10.77-24 24-24zM464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 336H48V112h416v288z\" />\r\n                </svg>\r\n            );\r\n        case \"services\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M507.48 117.18c-3-12.17-12.41-21.79-24.5-25.15-12.1-3.34-25.16.11-33.97 8.97l-58.66 58.63-32.44-5.4-5.38-32.41 58.67-58.64c8.84-8.89 12.28-21.92 8.91-33.99-3.38-12.11-13.06-21.5-25.29-24.53-53.09-13.19-107.91 2.07-146.54 40.69-37.63 37.62-52.6 91.37-40.72 143.27L24.04 372.06C8.53 387.53 0 408.12 0 430.02s8.53 42.49 24.04 57.97C39.51 503.47 60.1 512 82.01 512c21.88 0 42.47-8.53 57.98-24.01l183.34-183.26c51.79 11.87 105.64-3.14 143.49-40.93 38.09-38.1 53.69-94.27 40.66-146.62zm-74.61 112.69c-28.47 28.46-70.2 38.1-109.01 25.21l-14.06-4.69-203.75 203.67c-12.85 12.84-35.29 12.81-48.07 0-6.44-6.42-9.97-14.96-9.97-24.04 0-9.08 3.53-17.61 9.97-24.03l203.84-203.78-4.63-14.03c-12.81-38.9-3.22-80.62 25.04-108.9 20.35-20.32 47.19-31.24 75.04-31.24h1.12l-57.32 57.3 15.13 90.59 90.57 15.09 57.35-57.29c.32 28.26-10.62 55.52-31.25 76.14zM88.01 408.02c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.16-16-16-16z\" />\r\n                </svg>\r\n            );\r\n        case \"create\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\r\n                    <path d=\"M300.8 203.9L290.7 128H328c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24H56C42.8 0 32 10.8 32 24v80c0 13.2 10.8 24 24 24h37.3l-10.1 75.9C34.9 231.5 0 278.4 0 335.2c0 8.8 7.2 16 16 16h160V472c0 .7.1 1.3.2 1.9l8 32c2 8 13.5 8.1 15.5 0l8-32c.2-.6.2-1.3.2-1.9V351.2h160c8.8 0 16-7.2 16-16 .1-56.8-34.8-103.7-83.1-131.3zM33.3 319.2c6.8-42.9 39.6-76.4 79.5-94.5L128 96H64V32h256v64h-64l15.3 128.8c40 18.2 72.7 51.8 79.5 94.5H33.3z\" />\r\n                </svg>\r\n            );\r\n        case \"search\":\r\n            return (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395 312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5 0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17 0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208 32s176 78.7 176 176-78.7 176-176 176z\" />\r\n                </svg>\r\n            );\r\n        default:\r\n    }\r\n};\r\nexport default Icon;\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nvar AES = require(\"crypto-js/aes\");\r\nvar SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\",\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    changeState(e) {\r\n        switch (e.target.id) {\r\n            case \"login\":\r\n                this.setState({ login: e.target.value });\r\n                break;\r\n            case \"password\":\r\n                this.setState({ password: e.target.value });\r\n                break;\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        fetch(\r\n            \"http://localhost:8080/login/\" +\r\n                this.state.login +\r\n                \"/\" +\r\n                SHA256(this.state.password).toString()\r\n        )\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                if (result.length !== 0) {\r\n                    sessionStorage.setItem(\"isLogged\", true);\r\n                    sessionStorage.setItem(\"userId\", result[0].user_id);\r\n                    sessionStorage.setItem(\"roleId\", result[0].role_id);\r\n                    sessionStorage.setItem(\"login\", result[0].login);\r\n                    this.props.changeStatus();\r\n                } else {\r\n                    alert(\"Nie udało sie zalogować\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n        this.setState({\r\n            mail: \"\",\r\n            login: \"\",\r\n            password: \"\",\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login-modal-background\">\r\n                <div className=\"login-box-container\">\r\n                    <div className=\"login-box\">\r\n                        <div className=\"login-select-login-register\">\r\n                            <button\r\n                                className=\"login-select-button-active\"\r\n                                type=\"submit\"\r\n                                onClick={this.props.toggle}\r\n                                value=\"login\"\r\n                            >\r\n                                Logowanie\r\n                            </button>\r\n                            <button\r\n                                className=\"login-select-button\"\r\n                                type=\"submit\"\r\n                                onClick={this.props.toggle}\r\n                                value=\"register\"\r\n                            >\r\n                                Rejestracja\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"login-invalid-data-container\">\r\n                            <p>Niepoprawne dane</p>\r\n                        </div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <div className=\"login-form-row\">\r\n                                    <div className=\"login-form-row-item\">\r\n                                        <label className=\"login-form-row-input-wrapper\">\r\n                                            <svg\r\n                                                id=\"user-icon\"\r\n                                                className=\"login-icon\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 448 512\"\r\n                                            >\r\n                                                <path d=\"M313.6 288c-28.7 0-42.5 16-89.6 16-47.1 0-60.8-16-89.6-16C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zM416 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16v-41.6C32 365.9 77.9 320 134.4 320c19.6 0 39.1 16 89.6 16 50.4 0 70-16 89.6-16 56.5 0 102.4 45.9 102.4 102.4V464zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm0-224c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96z\" />\r\n                                            </svg>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"login-form-row-input\"\r\n                                                onChange={this.changeState}\r\n                                                value={this.state.login}\r\n                                                id=\"login\"\r\n                                                required\r\n                                            />\r\n                                            <span className=\"placeholder\">\r\n                                                Login\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"login-form-row\">\r\n                                    <div className=\"login-form-row-item\">\r\n                                        <label className=\"login-form-row-input-wrapper\">\r\n                                            <svg\r\n                                                id=\"lock-icon\"\r\n                                                className=\"login-icon\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 448 512\"\r\n                                            >\r\n                                                <path d=\"M400 224h-16v-62.5C384 73.1 312.9.3 224.5 0 136-.3 64 71.6 64 160v64H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zM96 160c0-70.6 57.4-128 128-128s128 57.4 128 128v64H96v-64zm304 320H48c-8.8 0-16-7.2-16-16V272c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v192c0 8.8-7.2 16-16 16z\" />\r\n                                            </svg>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"login-form-row-input\"\r\n                                                onChange={this.changeState}\r\n                                                value={this.state.password}\r\n                                                id=\"password\"\r\n                                                required\r\n                                            />\r\n                                            <span className=\"placeholder\">\r\n                                                Hasło\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"login-submit-button-container\">\r\n                                <button\r\n                                    className=\"login-submit-button\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Zaloguj się\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"login-cancel\">\r\n                            <button\r\n                                className=\"login-cancel-button\"\r\n                                onClick={this.props.hideLoginRegister}\r\n                                value=\"hide\"\r\n                            >\r\n                                anuluj\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nvar AES = require(\"crypto-js/aes\");\r\nvar SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mail: \"\",\r\n            login: \"\",\r\n            password: \"\",\r\n            role: 3,\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    changeState(e) {\r\n        switch (e.target.id) {\r\n            case \"mail\":\r\n                this.setState({ mail: e.target.value });\r\n                break;\r\n            case \"login\":\r\n                this.setState({ login: e.target.value });\r\n                break;\r\n            case \"password\":\r\n                this.setState({ password: e.target.value });\r\n                break;\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const body = {\r\n            mail: this.state.mail,\r\n            login: this.state.login,\r\n            password: SHA256(this.state.password).toString(),\r\n            role: this.state.role,\r\n        };\r\n        const request = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/register\", request)\r\n            .then((result) => {\r\n                // status: 200 jesli ok\r\n                if (result.status == 200) {\r\n                    alert(\"Konto zostalo utworzone\");\r\n                    this.props.hideLoginRegister();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(\"Konto nie zostalo utworzone\");\r\n                console.error(\"Error:\", error);\r\n            });\r\n        this.setState({\r\n            mail: \"\",\r\n            login: \"\",\r\n            password: \"\",\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login-modal-background\">\r\n                <div className=\"login-box-container\">\r\n                    <div className=\"login-box\">\r\n                        <div className=\"login-select-login-register\">\r\n                            <button\r\n                                className=\"login-select-button\"\r\n                                type=\"submit\"\r\n                                onClick={this.props.toggle}\r\n                                value=\"login\"\r\n                            >\r\n                                Logowanie\r\n                            </button>\r\n                            <button\r\n                                className=\"login-select-button-active\"\r\n                                type=\"submit\"\r\n                                onClick={this.props.toggle}\r\n                                value=\"register\"\r\n                            >\r\n                                Rejestracja\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"login-invalid-data-container\">\r\n                            <p>Niepoprawne dane</p>\r\n                        </div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <div className=\"login-form-row\">\r\n                                    <div className=\"login-form-row-item\">\r\n                                        <label className=\"login-form-row-input-wrapper\">\r\n                                            <svg\r\n                                                id=\"mail-icon\"\r\n                                                className=\"login-icon\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                            >\r\n                                                <path d=\"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM48 96h416c8.8 0 16 7.2 16 16v41.4c-21.9 18.5-53.2 44-150.6 121.3-16.9 13.4-50.2 45.7-73.4 45.3-23.2.4-56.6-31.9-73.4-45.3C85.2 197.4 53.9 171.9 32 153.4V112c0-8.8 7.2-16 16-16zm416 320H48c-8.8 0-16-7.2-16-16V195c22.8 18.7 58.8 47.6 130.7 104.7 20.5 16.4 56.7 52.5 93.3 52.3 36.4.3 72.3-35.5 93.3-52.3 71.9-57.1 107.9-86 130.7-104.7v205c0 8.8-7.2 16-16 16z\" />\r\n                                            </svg>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"login-form-row-input\"\r\n                                                onChange={this.changeState}\r\n                                                value={this.state.mail}\r\n                                                id=\"mail\"\r\n                                                required\r\n                                            />\r\n                                            <span className=\"placeholder\">\r\n                                                Email\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"login-form-row\">\r\n                                    <div className=\"login-form-row-item\">\r\n                                        <label className=\"login-form-row-input-wrapper\">\r\n                                            <svg\r\n                                                id=\"user-icon\"\r\n                                                className=\"login-icon\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 448 512\"\r\n                                            >\r\n                                                <path d=\"M313.6 288c-28.7 0-42.5 16-89.6 16-47.1 0-60.8-16-89.6-16C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zM416 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16v-41.6C32 365.9 77.9 320 134.4 320c19.6 0 39.1 16 89.6 16 50.4 0 70-16 89.6-16 56.5 0 102.4 45.9 102.4 102.4V464zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm0-224c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96z\" />\r\n                                            </svg>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"login-form-row-input\"\r\n                                                onChange={this.changeState}\r\n                                                value={this.state.login}\r\n                                                id=\"login\"\r\n                                                required\r\n                                            />\r\n                                            <span className=\"placeholder\">\r\n                                                Login\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"login-form-row\">\r\n                                    <div className=\"login-form-row-item\">\r\n                                        <label className=\"login-form-row-input-wrapper\">\r\n                                            <svg\r\n                                                id=\"lock-icon\"\r\n                                                className=\"login-icon\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 448 512\"\r\n                                            >\r\n                                                <path d=\"M400 224h-16v-62.5C384 73.1 312.9.3 224.5 0 136-.3 64 71.6 64 160v64H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zM96 160c0-70.6 57.4-128 128-128s128 57.4 128 128v64H96v-64zm304 320H48c-8.8 0-16-7.2-16-16V272c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v192c0 8.8-7.2 16-16 16z\" />\r\n                                            </svg>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"login-form-row-input\"\r\n                                                onChange={this.changeState}\r\n                                                value={this.state.password}\r\n                                                id=\"password\"\r\n                                                required\r\n                                            />\r\n                                            <span className=\"placeholder\">\r\n                                                Hasło\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"login-submit-button-container\">\r\n                                <button\r\n                                    className=\"login-submit-button\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Zarejestruj się\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"login-cancel\">\r\n                            <button\r\n                                className=\"login-cancel-button\"\r\n                                onClick={this.props.hideLoginRegister}\r\n                                value=\"hide\"\r\n                            >\r\n                                anuluj\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Register;\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Icon from \"../icons/Icons\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nclass LoginRegister extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loginOrRegister: \"login\", isLogged: false };\r\n        this.toggleLoginRegister = this.toggleLoginRegister.bind(this);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.hideLoginRegister = this.hideLoginRegister.bind(this);\r\n    }\r\n    toggleLoginRegister(e) {\r\n        this.setState({ loginOrRegister: e.target.value });\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({ isLogged: true });\r\n        this.props.changeStatus();\r\n    }\r\n    hideLoginRegister(e) {\r\n        this.props.showhideLoginBox(e);\r\n    }\r\n    render() {\r\n        if (this.state.loginOrRegister == \"login\")\r\n            return (\r\n                <Login\r\n                    toggle={this.toggleLoginRegister}\r\n                    changeStatus={this.changeLoginStatus}\r\n                    hideLoginRegister={this.hideLoginRegister}\r\n                />\r\n            );\r\n        else {\r\n            return (\r\n                <Register\r\n                    toggle={this.toggleLoginRegister}\r\n                    hideLoginRegister={this.hideLoginRegister}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport LoginRegister from \"./LoginRegister\";\r\nimport { DropdownItem } from \"reactstrap\";\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n    changeLoginStatus() {\r\n        this.props.changeStatus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top navbar-inverse\">\r\n                    <ul class=\"nav navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            {sessionStorage.getItem(\"isLogged\") == \"true\" && (\r\n                                <Link class=\"nav-link\" to=\"/myprojects\">\r\n                                    Moje projekty\r\n                                </Link>\r\n                            )}\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            {sessionStorage.getItem(\"isLogged\") == \"true\" && (\r\n                                <Link class=\"nav-link\" to=\"/projectstodo\">\r\n                                    Do zrobienia\r\n                                </Link>\r\n                            )}\r\n                        </li>\r\n                        {(sessionStorage.getItem(\"roleId\") == \"1\" ||\r\n                            sessionStorage.getItem(\"roleId\") == \"2\") && (\r\n                            <li class=\"nav-item dropdown\">\r\n                                <a\r\n                                    class=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"navbardrop\"\r\n                                    data-toggle=\"dropdown\"\r\n                                >\r\n                                    Panel pracownika\r\n                                </a>\r\n                                <div class=\"dropdown-menu\">\r\n                                    <Link\r\n                                        class=\"dropdown-item nav-link\"\r\n                                        to=\"/projectsmanager\"\r\n                                    >\r\n                                        Projekty\r\n                                    </Link>\r\n                                    <Link\r\n                                        class=\"dropdown-item nav-link\"\r\n                                        to=\"/offersmanager\"\r\n                                    >\r\n                                        Oferty\r\n                                    </Link>\r\n                                </div>\r\n                            </li>\r\n                        )}\r\n                        <li class=\"nav-item\">\r\n                            {sessionStorage.getItem(\"roleId\") == \"1\" && (\r\n                                <Link class=\"nav-link\" to=\"/admin\">\r\n                                    Panel admina\r\n                                </Link>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                    <ul class=\"nav navbar-nav ml-auto\">\r\n                        {sessionStorage.getItem(\"isLogged\") == \"true\" && (\r\n                            <span class=\"nav-logged-as navbar-text\">\r\n                                Jesteś zalogowany jako{\" \"}\r\n                                <b> {sessionStorage.getItem(\"login\")} </b>\r\n                            </span>\r\n                        )}\r\n                        <li>\r\n                            <LoginLogout\r\n                                changeStatus={this.changeLoginStatus}\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass LoginLogout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginModal: \"\",\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.showhideLoginBox = this.showhideLoginBox.bind(this);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n    logout() {\r\n        sessionStorage.setItem(\"isLogged\", false);\r\n        sessionStorage.setItem(\"userId\", null);\r\n        sessionStorage.setItem(\"roleId\", null);\r\n        sessionStorage.setItem(\"login\", null);\r\n        this.props.changeStatus();\r\n        this.setState({ loginModal: \"\" });\r\n    }\r\n    changeLoginStatus() {\r\n        this.props.changeStatus();\r\n    }\r\n    showhideLoginBox(e) {\r\n        this.setState({ loginModal: \"\" });\r\n    }\r\n    login() {\r\n        this.setState({\r\n            loginModal: (\r\n                <LoginRegister\r\n                    changeStatus={this.changeLoginStatus}\r\n                    showhideLoginBox={this.showhideLoginBox}\r\n                />\r\n            ),\r\n        });\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem(\"isLogged\") == \"true\") {\r\n            return (\r\n                <button class=\"btn btn-secondary\" onClick={this.logout}>\r\n                    Wyloguj się\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <button class=\"btn btn-secondary\" onClick={this.login}>\r\n                        Logowanie | Rejestracja\r\n                    </button>\r\n                    {this.state.loginModal}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Navigation;\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Icon from \"../icons/Icons\";\r\nimport Nav from \"./Nav\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({ isLogged: sessionStorage.getItem(\"isLogged\") });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"home-background\">\r\n                <div className=\"home-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <div className=\"home-desc-container\">\r\n                        <h1 className=\"home-title-title\">\r\n                            <b>Usługi</b> freelancerskie.\r\n                        </h1>\r\n                        <p className=\"home-title-desc\">\r\n                            Znajdź lub zleć pracę.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"home-button-container\">\r\n                        <Link to=\"/browse\">\r\n                            <button className=\"home-button\">Znajdź</button>\r\n                        </Link>\r\n                        <span></span>\r\n                        <Link to=\"/create\">\r\n                            <button className=\"home-button\">Zleć</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nexport function getRoles() {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/roles/\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\n\r\nexport function getUsers() {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/users/\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n            .then((users) => {\r\n                return users;\r\n            });\r\n    });\r\n}\r\nexport function getSkillsByCategoryId(params) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/skills/\" + params)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n            .then((skills) => {\r\n                return skills;\r\n            });\r\n    });\r\n}\r\nexport function getCategories() {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/categories\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n            .then((skills) => {\r\n                return skills;\r\n            });\r\n    });\r\n}\r\nexport function getOffers(params) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/offers/\" + params)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n            .then((offers) => {\r\n                return offers;\r\n            });\r\n    });\r\n}\r\nexport function getProjectsByDate(period) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/getprojectsbydate/\" + period)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\nexport function getOffersByDate(period) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/getoffersbydate/\" + period)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\nexport function getMyProjects(userId) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/getmyprojects/\" + userId)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\nexport function getProjectsToDo(userId) {\r\n    return new Promise((resolve) => {\r\n        fetch(\"http://localhost:8080/getprojectstodo/\" + userId)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\nexport function updateProjectByChosenOffer(projectId, offerId) {\r\n    var body = {\r\n        project_id: projectId,\r\n        offer_id: offerId,\r\n    };\r\n    const requestOptions = {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n    };\r\n    fetch(\"http://localhost:8080/chooseoffer\", requestOptions).then(\r\n        (response) => {\r\n            if (response.status == 200) {\r\n                return true;\r\n            }\r\n        }\r\n    );\r\n}\r\nexport function setStatusToDone(projectId) {\r\n    var body = {\r\n        project_id: projectId,\r\n    };\r\n    const requestOptions = {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n    };\r\n    fetch(\"http://localhost:8080/setstatustodone\", requestOptions).then(\r\n        (response) => {\r\n            if (response.status == 200) {\r\n                return true;\r\n            }\r\n        }\r\n    );\r\n}\r\nexport function checkIfUserAlreadyPostedOffer(userId, projectId) {\r\n    return new Promise((resolve) => {\r\n        fetch(\r\n            \"http://localhost:8080/checkifcanpostoffer/\" +\r\n                userId +\r\n                \"/\" +\r\n                projectId\r\n        )\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    resolve(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    });\r\n}\r\nexport function deleteUser(userId) {\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\"http://localhost:8080/deleteuser/\" + userId, requestOptions).then(\r\n        (response) => {\r\n            if (response.status == 200) {\r\n                return true;\r\n            }\r\n        }\r\n    );\r\n}\r\nexport function deleteProject(projectId) {\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\r\n        \"http://localhost:8080/deleteproject/\" + projectId,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.status == 200) {\r\n            return true;\r\n        }\r\n    });\r\n}\r\nexport function deleteOffer(offerId) {\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\"http://localhost:8080/deleteoffer/\" + offerId, requestOptions).then(\r\n        (response) => {\r\n            if (response.status == 200) {\r\n                return true;\r\n            }\r\n        }\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Icon from \"../icons/Icons\";\r\nimport LoginRegister from \"./LoginRegister\";\r\nimport { getSkillsByCategoryId, getCategories } from \"./Util\";\r\nimport \"./styles.css\";\r\nimport \"./checkbox.css\";\r\nimport \"../icons/icons.css\";\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            skills: [],\r\n            categoryChecked: \"\",\r\n            skillsChecked: [],\r\n            title: \"\",\r\n            desc: \"\",\r\n            price: 0,\r\n            error: null,\r\n            isLoaded: false,\r\n            posted: false,\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n            loginButton: \"\",\r\n            previousTarget: null,\r\n        };\r\n        this.secondStep = this.secondStep.bind(this);\r\n        this.thirdStep = this.thirdStep.bind(this);\r\n        this.selectCategory = this.selectCategory.bind(this);\r\n        this.selectSkill = this.selectSkill.bind(this);\r\n        this.titleChange = this.titleChange.bind(this);\r\n        this.descChange = this.descChange.bind(this);\r\n        this.priceChange = this.priceChange.bind(this);\r\n        this.postProject = this.postProject.bind(this);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.showhideLoginBox = this.showhideLoginBox.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        const result = await getCategories();\r\n        this.setState({\r\n            categories: result,\r\n        });\r\n        this.setState({\r\n            loginButton: (\r\n                <button\r\n                    value=\"show\"\r\n                    className=\"global-button form-button\"\r\n                    onClick={this.showhideLoginBox}\r\n                >\r\n                    Żeby dodać projekt musisz byc zalogowany\r\n                </button>\r\n            ),\r\n        });\r\n    }\r\n    async secondStep() {\r\n        const res = await getSkillsByCategoryId(this.state.categoryChecked);\r\n        this.setState({\r\n            skills: res,\r\n        });\r\n        document.getElementById(\"form-first-step\").style.display = \"none\";\r\n        document.getElementById(\"form-second-step\").style.display = \"block\";\r\n    }\r\n    thirdStep() {\r\n        document.getElementById(\"form-second-step\").style.display = \"none\";\r\n        document.getElementById(\"form-third-step\").style.display = \"block\";\r\n    }\r\n    selectCategory(e) {\r\n        if (this.state.previousTarget != null) {\r\n            this.state.previousTarget.classList.remove(\r\n                \"category-container-active\"\r\n            );\r\n        }\r\n        e.currentTarget.classList.add(\"category-container-active\");\r\n        this.setState({ previousTarget: e.currentTarget });\r\n        this.setState({\r\n            categoryChecked: e.currentTarget.getAttribute(\"category_id\"),\r\n        });\r\n    }\r\n    selectSkill(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skillsChecked: [...this.state.skillsChecked, e.target.value],\r\n            });\r\n        } else {\r\n            let remove = this.state.skillsChecked.indexOf(e.target.value);\r\n            this.setState({\r\n                skillsChecked: this.state.skillsChecked.filter(\r\n                    (_, i) => i !== remove\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    titleChange(e) {\r\n        this.setState({\r\n            title: e.target.value,\r\n        });\r\n    }\r\n    descChange(e) {\r\n        this.setState({\r\n            desc: e.target.value,\r\n        });\r\n    }\r\n    priceChange(e) {\r\n        this.setState({\r\n            price: e.target.value,\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        //event.preventDefault();\r\n        alert(this.state.skillsChecked);\r\n    }\r\n    postProject() {\r\n        var body = {\r\n            category: this.state.categoryChecked,\r\n            skills: this.state.skillsChecked,\r\n            title: this.state.title,\r\n            desc: this.state.desc,\r\n            price: this.state.price,\r\n            user_id: this.state.userId,\r\n        };\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/createproject\", requestOptions).then(() =>\r\n            alert(\"Wysłano\")\r\n        );\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (\"true\" != sessionStorage.getItem(\"isLogged\")) {\r\n            this.logout();\r\n        }\r\n    }\r\n    showhideLoginBox(e) {\r\n        //e.preventDefault();\r\n        if (e.target.value == \"show\") {\r\n            this.setState({\r\n                loginButton: (\r\n                    <LoginRegister\r\n                        changeStatus={this.changeLoginStatus}\r\n                        showhideLoginBox={this.showhideLoginBox}\r\n                    />\r\n                ),\r\n            });\r\n        } else if (e.target.value == \"hide\") {\r\n            this.setState({\r\n                loginButton: (\r\n                    <button\r\n                        value=\"show\"\r\n                        className=\"global-button form-button\"\r\n                        onClick={this.showhideLoginBox}\r\n                    >\r\n                        Żeby dodać projekt musisz byc zalogowany\r\n                    </button>\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    logout() {\r\n        this.setState({\r\n            isLogged: false,\r\n            loginButton: (\r\n                <button\r\n                    value=\"show\"\r\n                    className=\"global-button form-button\"\r\n                    onClick={this.showhideLoginBox}\r\n                >\r\n                    Żeby dodać projekt musisz byc zalogowany\r\n                </button>\r\n            ),\r\n        });\r\n    }\r\n    render() {\r\n        if (\"true\" != sessionStorage.getItem(\"isLogged\")) {\r\n            return (\r\n                <div className=\"global-background\">\r\n                    <div className=\"global-content\">\r\n                        <Nav\r\n                            isLogged={this.state.isLogged}\r\n                            changeStatus={this.changeLoginStatus}\r\n                        />\r\n                        {this.state.loginButton}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"global-background\">\r\n                    <div className=\"global-content\">\r\n                        <Nav\r\n                            isLogged={this.state.isLogged}\r\n                            changeStatus={this.changeLoginStatus}\r\n                        />\r\n                        <form>\r\n                            <div id=\"form-first-step\">\r\n                                <h1>Wybierz kategorie:</h1>\r\n                                {this.state.categories.map((item) => (\r\n                                    <label\r\n                                        className=\"category-container\"\r\n                                        key={item.category_id}\r\n                                    >\r\n                                        <div\r\n                                            className=\"category-icon\"\r\n                                            key={item.category_id}\r\n                                            category_id={item.category_id}\r\n                                            onClick={this.selectCategory}\r\n                                        >\r\n                                            <Icon icon={item.icon} />\r\n                                        </div>\r\n                                        <p>{item.name}</p>\r\n                                    </label>\r\n                                ))}\r\n                                <br />\r\n                                <button\r\n                                    id=\"second-step-button\"\r\n                                    className=\"global-button form-button\"\r\n                                    type=\"button\"\r\n                                    onClick={this.secondStep}\r\n                                >\r\n                                    Dalej\r\n                                </button>\r\n                            </div>\r\n                            <div\r\n                                id=\"form-second-step\"\r\n                                style={{ display: \"none\" }}\r\n                            >\r\n                                <h1>Wybierz wymagane umiejętności:</h1>\r\n                                {this.state.skills.map((item) => (\r\n                                    <label class=\"container\">\r\n                                        {item.name}\r\n                                        <input\r\n                                            key={item.skill_id}\r\n                                            onClick={this.selectSkill}\r\n                                            type=\"checkbox\"\r\n                                            value={item.skill_id}\r\n                                        />\r\n                                        <span class=\"checkmark\"></span>\r\n                                    </label>\r\n                                ))}\r\n                                <br />\r\n                                <button\r\n                                    id=\"third-step-button\"\r\n                                    className=\"global-button form-button\"\r\n                                    type=\"button\"\r\n                                    onClick={this.thirdStep}\r\n                                >\r\n                                    Dalej\r\n                                </button>\r\n                            </div>\r\n                            <div\r\n                                id=\"form-third-step\"\r\n                                style={{ display: \"none\" }}\r\n                            >\r\n                                <div id=\"title\">\r\n                                    <h2>Tytuł</h2>\r\n                                    <input\r\n                                        name=\"title\"\r\n                                        minlength=\"5\"\r\n                                        onChange={this.titleChange}\r\n                                    />\r\n                                </div>\r\n                                <div id=\"desc\">\r\n                                    <h2>Opis</h2>\r\n                                    <textarea\r\n                                        value={this.state.value}\r\n                                        name=\"desc\"\r\n                                        onChange={this.descChange}\r\n                                        rows=\"20\"\r\n                                        cols=\"50\"\r\n                                    />\r\n                                </div>\r\n                                <div id=\"price\">\r\n                                    <h2>Cena</h2>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"price\"\r\n                                        onChange={this.priceChange}\r\n                                    />\r\n                                    PLN\r\n                                </div>\r\n                                <Link to=\"/\">\r\n                                    <button\r\n                                        className=\"global-button form-button\"\r\n                                        onClick={this.postProject}\r\n                                    >\r\n                                        Wyślij\r\n                                    </button>\r\n                                </Link>\r\n                                <br />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Icon from \"../icons/Icons\";\r\nimport { getSkillsByCategoryId, getCategories } from \"./Util\";\r\nimport \"./styles.css\";\r\nimport \"./checkbox.css\";\r\nimport \"../icons/icons.css\";\r\nclass Browse extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            skills: [],\r\n            categoryChecked: \"\",\r\n            skillsChecked: [],\r\n            error: null,\r\n            isLoaded: false,\r\n            isLogged: null,\r\n            previousTarget: null,\r\n        };\r\n        this.secondStep = this.secondStep.bind(this);\r\n        this.selectCategory = this.selectCategory.bind(this);\r\n        this.selectSkill = this.selectSkill.bind(this);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        const result = await getCategories();\r\n        this.setState({\r\n            categories: result,\r\n        });\r\n        document.getElementById(\"form-second-step\").style.display = \"none\";\r\n    }\r\n    async secondStep() {\r\n        const res = await getSkillsByCategoryId(this.state.categoryChecked);\r\n        this.setState({\r\n            skills: res,\r\n        });\r\n        document.getElementById(\"form-first-step\").style.display = \"none\";\r\n        document.getElementById(\"form-second-step\").style.display = \"block\";\r\n    }\r\n    selectCategory(e) {\r\n        if (this.state.previousTarget != null) {\r\n            this.state.previousTarget.classList.remove(\r\n                \"category-container-active\"\r\n            );\r\n        }\r\n        e.currentTarget.classList.add(\"category-container-active\");\r\n        this.setState({ previousTarget: e.currentTarget });\r\n        this.setState({\r\n            categoryChecked: e.currentTarget.getAttribute(\"category_id\"),\r\n        });\r\n    }\r\n    selectSkill(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skillsChecked: [...this.state.skillsChecked, e.target.value],\r\n            });\r\n        } else {\r\n            let remove = this.state.skillsChecked.indexOf(e.target.value);\r\n            this.setState({\r\n                skillsChecked: this.state.skillsChecked.filter(\r\n                    (_, i) => i !== remove\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        //event.preventDefault();\r\n        alert(this.state.skillsChecked);\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({ isLogged: sessionStorage.getItem(\"isLogged\") });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <form>\r\n                        <div id=\"form-first-step\">\r\n                            <h1>Wybierz kategorie:</h1>\r\n                            {this.state.categories.map((item) => (\r\n                                <label\r\n                                    className=\"category-container\"\r\n                                    key={item.category_id}\r\n                                >\r\n                                    <div\r\n                                        className=\"category-icon\"\r\n                                        key={item.category_id}\r\n                                        category_id={item.category_id}\r\n                                        onClick={this.selectCategory}\r\n                                    >\r\n                                        <Icon icon={item.icon} />\r\n                                    </div>\r\n                                    <p>{item.name}</p>\r\n                                </label>\r\n                            ))}\r\n                            <br />\r\n                            <button\r\n                                id=\"second-step-button\"\r\n                                className=\"global-button form-button\"\r\n                                type=\"button\"\r\n                                onClick={this.secondStep}\r\n                            >\r\n                                Dalej\r\n                            </button>\r\n                        </div>\r\n                        <div id=\"form-second-step\">\r\n                            <h1>Wybierz umiejętności:</h1>\r\n                            {this.state.skills.map((item) => (\r\n                                <label class=\"container\">\r\n                                    {item.name}\r\n                                    <input\r\n                                        key={item.skill_id}\r\n                                        onClick={this.selectSkill}\r\n                                        type=\"checkbox\"\r\n                                        value={item.skill_id}\r\n                                    />\r\n                                    <span class=\"checkmark\"></span>\r\n                                </label>\r\n                            ))}\r\n                            <br />\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/list\",\r\n                                    state: {\r\n                                        category: this.state.categoryChecked,\r\n                                        skills: this.state.skillsChecked,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <button className=\"global-button form-button\">\r\n                                    Szukaj\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Browse;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Icon from \"../icons/Icons\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.location.state.category,\r\n            skills: this.props.location.state.skills,\r\n            data: [],\r\n        };\r\n        this.browseProjects = this.browseProjects.bind(this);\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.browseProjects();\r\n    }\r\n    browseProjects() {\r\n        fetch(\"http://localhost:8080/projectsbyskills/\" + this.state.skills)\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    hasError: true,\r\n                    data: result,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({ isLogged: sessionStorage.getItem(\"isLogged\") });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    {this.state.data.map((item) => (\r\n                        <div className=\"list-project-container\">\r\n                            <Link\r\n                                className=\"list-project\"\r\n                                to={{\r\n                                    pathname: \"/project\",\r\n                                    state: {\r\n                                        data: item,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <div className=\"project-list-details\">\r\n                                    <div className=\"project-list-author\">\r\n                                        <b>{item.login}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-price\">\r\n                                        {item.price} PLN\r\n                                    </div>\r\n                                    <div className=\"project-list-category\">\r\n                                        <Icon icon={item.icon} />\r\n                                        <b>\r\n                                            <div>{item.name}</div>\r\n                                        </b>\r\n                                    </div>\r\n                                    <div className=\"project-list-skills\">\r\n                                        {item.skills.map((skill) => (\r\n                                            <div>{skill.name}</div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"project-title\">\r\n                                    <b>{item.title}</b>\r\n                                </div>\r\n                                <div className=\"project-list-desc\">\r\n                                    <p>{item.description}</p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n    getSkillsByCategoryId,\r\n    getOffers,\r\n    updateProjectByChosenOffer,\r\n    checkIfUserAlreadyPostedOffer,\r\n} from \"./Util\";\r\nimport LoginRegister from \"./LoginRegister\";\r\nimport Icon from \"../icons/Icons\";\r\nimport \"./offer-checkbox.css\";\r\nclass Project extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            project: {\r\n                id: this.props.location.state.data.project_id,\r\n                category: this.props.location.state.data.category_id,\r\n                skills: this.props.location.state.data.skills,\r\n                title: this.props.location.state.data.title,\r\n                desc: this.props.location.state.data.description,\r\n                price: this.props.location.state.data.price,\r\n                author_id: this.props.location.state.data.author_id,\r\n                login: this.props.location.state.data.login,\r\n                icon: this.props.location.state.data.icon,\r\n                category_name: this.props.location.state.data.name,\r\n            },\r\n            status_id: this.props.location.state.data.status_id,\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            loggedUserId: sessionStorage.getItem(\"userId\"),\r\n            isOwner: null,\r\n            loginButton: \"\",\r\n            offerAdded: 0,\r\n            canPost: null,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.showhideLoginBox = this.showhideLoginBox.bind(this);\r\n        this.updateProjectStatus = this.updateProjectStatus.bind(this);\r\n        this.offerAdded = this.offerAdded.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            loginButton: (\r\n                <button\r\n                    className=\"global-button form-button\"\r\n                    value=\"show\"\r\n                    onClick={this.showhideLoginBox}\r\n                >\r\n                    Żeby dodać oferte musisz być zalogowany\r\n                </button>\r\n            ),\r\n        });\r\n        if (this.state.loggedUserId == this.state.project.author_id) {\r\n            this.setState({ isOwner: true });\r\n        } else {\r\n            this.setState({ isOwner: false });\r\n        }\r\n        this.checkIfUserAlreadyPostedOffer();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            loggedUserId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (\"true\" != sessionStorage.getItem(\"isLogged\")) {\r\n            this.logout();\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") == this.state.project.author_id) {\r\n            this.setState({ isOwner: true });\r\n        } else {\r\n            this.setState({ isOwner: false });\r\n        }\r\n    }\r\n    async checkIfUserAlreadyPostedOffer() {\r\n        const result = await checkIfUserAlreadyPostedOffer(\r\n            this.state.loggedUserId,\r\n            this.state.project.id\r\n        );\r\n        this.setState({ canPost: result });\r\n    }\r\n    updateProjectStatus() {\r\n        this.setState({ status_id: 2 });\r\n    }\r\n    offerAdded() {\r\n        this.setState({\r\n            offerAdded: this.state.offerAdded + 1,\r\n            canPost: false,\r\n        });\r\n    }\r\n    showhideLoginBox(e) {\r\n        e.preventDefault();\r\n        if (e.target.value == \"show\") {\r\n            this.setState({\r\n                loginButton: (\r\n                    <LoginRegister\r\n                        changeStatus={this.changeLoginStatus}\r\n                        showhideLoginBox={this.showhideLoginBox}\r\n                    />\r\n                ),\r\n            });\r\n        } else if (e.target.value == \"hide\") {\r\n            this.setState({\r\n                loginButton: (\r\n                    <button\r\n                        className=\"global-button form-button\"\r\n                        value=\"show\"\r\n                        onClick={this.showhideLoginBox}\r\n                    >\r\n                        Żeby dodać oferte musisz być zalogowany\r\n                    </button>\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    logout() {\r\n        this.setState({\r\n            loginButton: (\r\n                <button\r\n                    className=\"global-button form-button\"\r\n                    value=\"show\"\r\n                    onClick={this.showhideLoginBox}\r\n                >\r\n                    Żeby dodać oferte musisz być zalogowany\r\n                </button>\r\n            ),\r\n        });\r\n    }\r\n    render() {\r\n        let addOffer;\r\n        if (this.state.status_id == 2 || this.state.status_id == 3) {\r\n            addOffer = (\r\n                <p>Oferta zostala wybrana lub projekt jest zakonczony</p>\r\n            );\r\n        } else if (!this.state.canPost && \"true\" == this.state.isLogged) {\r\n            addOffer = (\r\n                <p>\r\n                    <b>Dodałeś już ofertę</b>\r\n                </p>\r\n            );\r\n        } else if (\"true\" == this.state.isLogged && !this.state.isOwner) {\r\n            addOffer = (\r\n                <AddOffer\r\n                    offerAdded={this.offerAdded}\r\n                    project={this.state.project}\r\n                />\r\n            );\r\n        } else if (\"true\" == this.state.isLogged && this.state.isOwner) {\r\n            addOffer = <p>Nie mozesz dodac oferty do wlasnego projektu</p>;\r\n        } else {\r\n            addOffer = this.state.loginButton;\r\n        }\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <ProjectView project={this.state.project} />\r\n                    <OffersList\r\n                        projectId={this.state.project.id}\r\n                        statusId={this.state.status_id}\r\n                        isOwner={this.state.isOwner}\r\n                        loggedUserId={this.state.loggedUserId}\r\n                        changeStatus={this.updateProjectStatus}\r\n                        offerAdded={this.state.offerAdded}\r\n                    />\r\n                    {addOffer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;\r\n\r\nclass ProjectView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { project: props.project };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"project-list-details\">\r\n                    <div className=\"project-list-author\">\r\n                        <b>{this.state.project.login}</b>\r\n                    </div>\r\n                    <div className=\"project-list-price\">\r\n                        {this.state.project.price} PLN\r\n                    </div>\r\n                    <div className=\"project-list-category\">\r\n                        <Icon icon={this.state.project.icon} />\r\n                        <b>\r\n                            <div>{this.state.project.category_name}</div>\r\n                        </b>\r\n                    </div>\r\n                    <div className=\"project-list-skills\">\r\n                        {this.state.project.skills.map((skill) => (\r\n                            <div>{skill.name}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"project-title\">\r\n                    <b>{this.state.project.title}</b>\r\n                </div>\r\n                <div className=\"project-list-desc\">\r\n                    <p>{this.state.project.desc}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass OffersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            project_id: props.projectId,\r\n            status_id: props.statusId,\r\n            offers: [],\r\n            isOwner: null,\r\n            offerAdded: 0,\r\n        };\r\n        this.chooseOffer = this.chooseOffer.bind(this);\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.isOwner != prevState.isOwner) {\r\n            return { isOwner: nextProps.isOwner };\r\n        }\r\n        if (nextProps.offerAdded != prevState.offerAdded) {\r\n            return { offerAdded: nextProps.offerAdded };\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchOffersList();\r\n    }\r\n    async fetchOffersList() {\r\n        const result = await getOffers(this.state.project_id);\r\n        this.setState({\r\n            offers: result,\r\n        });\r\n    }\r\n    chooseOffer(e) {\r\n        const isUpdated = updateProjectByChosenOffer(\r\n            this.state.project_id,\r\n            e.target.value\r\n        );\r\n\r\n        this.setState({\r\n            status_id: 2,\r\n        });\r\n        this.props.changeStatus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"project-offers-container\">\r\n                {this.state.offers.map((item) => (\r\n                    <div className=\"project-offer-container\" key={item.id}>\r\n                        <div className=\"project-offer-author-date\">\r\n                            <b className=\"project-offer-author\">\r\n                                {item.user[0].login}\r\n                            </b>\r\n                            <span\r\n                                style={{\r\n                                    width: \"20px\",\r\n                                    display: \"inline-block\",\r\n                                }}\r\n                            ></span>\r\n                            {item.created_at}\r\n                        </div>\r\n                        <div className=\"project-offer-time-price\">\r\n                            Przewidywany czas pracy:<span> </span>\r\n                            <b>{item.estimated_time}</b> dni\r\n                            <span\r\n                                style={{\r\n                                    width: \"40px\",\r\n                                    display: \"inline-block\",\r\n                                }}\r\n                            ></span>\r\n                            Proponowana cena: <b>{item.price}</b> PLN\r\n                        </div>\r\n                        <div className=\"project-offer-skills\">\r\n                            Umiejętności:\r\n                            <span\r\n                                style={{\r\n                                    width: \"20px\",\r\n                                    display: \"inline-block\",\r\n                                }}\r\n                            ></span>\r\n                            {item.skills.map((skill) => (\r\n                                <div>{skill.name}</div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"project-offer-message\">\r\n                            {item.message}\r\n                        </div>\r\n                        {this.state.isOwner && this.state.status_id == 1 ? (\r\n                            <button\r\n                                className=\"global-button\"\r\n                                value={item.offer_id}\r\n                                onClick={this.chooseOffer}\r\n                            >\r\n                                Wybierz\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass AddOffer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            project: props.project,\r\n            skillsToSelect: [],\r\n            skillsChecked: [],\r\n            message: \"\",\r\n            price: 0,\r\n            estimated_time: 0,\r\n            project_id: props.project.id,\r\n            user_id: sessionStorage.getItem(\"userId\"),\r\n        };\r\n\r\n        this.changeState = this.changeState.bind(this);\r\n        this.selectSkill = this.selectSkill.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.skillsToSelect();\r\n    }\r\n    changeState(e) {\r\n        switch (e.target.id) {\r\n            case \"offer-message\":\r\n                this.setState({ message: e.target.value });\r\n                break;\r\n            case \"offer-time\":\r\n                this.setState({ estimated_time: e.target.value });\r\n                break;\r\n            case \"offer-price\":\r\n                this.setState({ price: e.target.value });\r\n                break;\r\n        }\r\n    }\r\n    selectSkill(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skillsChecked: [...this.state.skillsChecked, e.target.value],\r\n            });\r\n        } else {\r\n            let remove = this.state.skillsChecked.indexOf(e.target.value);\r\n            this.setState({\r\n                skillsChecked: this.state.skillsChecked.filter(\r\n                    (_, i) => i !== remove\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    async skillsToSelect() {\r\n        const res = await getSkillsByCategoryId(this.state.project.category);\r\n        this.setState({\r\n            skillsToSelect: res,\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        var body = {\r\n            category: this.state.project.category,\r\n            skills: this.state.skillsChecked,\r\n            message: this.state.message,\r\n            estimated_time: this.state.estimated_time,\r\n            price: this.state.price,\r\n            project_id: this.state.project.id,\r\n            user_id: this.state.user_id,\r\n        };\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/postoffer\", requestOptions).then(\r\n            function () {\r\n                var checkboxes = document.getElementsByClassName(\r\n                    \"offer-skills-checkbox\"\r\n                );\r\n                for (var i = 0; i < checkboxes.length; i++) {\r\n                    checkboxes.item(i).checked = false;\r\n                }\r\n                this.setState({\r\n                    skillsChecked: [],\r\n                    message: \"\",\r\n                    price: 0,\r\n                    estimated_time: 0,\r\n                });\r\n\r\n                this.props.offerAdded();\r\n            }.bind(this)\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"add-offer-container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div id=\"skills\" class=\"offer-skills\">\r\n                        Posiadane umiejętności:\r\n                        <br /> <br />\r\n                        {this.state.skillsToSelect.map((item) => (\r\n                            <label class=\"ocontainer\">\r\n                                {item.name}\r\n                                <input\r\n                                    key={item.skill_id}\r\n                                    onClick={this.selectSkill}\r\n                                    type=\"checkbox\"\r\n                                    value={item.skill_id}\r\n                                    className=\"offer-skills-checkbox\"\r\n                                />\r\n                                <span class=\"ocheckmark\"></span>\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"offer-rest\">\r\n                        <div id=\"offer-message-container\">\r\n                            <label>Treść:</label>\r\n                            <br />\r\n                            <textarea\r\n                                rows=\"4\"\r\n                                cols=\"50\"\r\n                                id=\"offer-message\"\r\n                                name=\"message\"\r\n                                onChange={this.changeState}\r\n                                value={this.state.message}\r\n                            />\r\n                        </div>\r\n                        <div id=\"offer-time-container\">\r\n                            <label>Szacowany czas(w dniach):</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"offer-time\"\r\n                                type=\"number\"\r\n                                name=\"time\"\r\n                                onChange={this.changeState}\r\n                                value={this.state.estimated_time}\r\n                            />\r\n                        </div>\r\n                        <div id=\"offer-price-container\">\r\n                            <label>Proponowana cena</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"offer-price\"\r\n                                type=\"number\"\r\n                                name=\"price\"\r\n                                onChange={this.changeState}\r\n                                value={this.state.price}\r\n                            />\r\n                        </div>\r\n                        <br /> <br />\r\n                    </div>\r\n                    <button\r\n                        className=\"global-button offer-send-button\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Wyślij\r\n                    </button>\r\n                    <br />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { getMyProjects, setStatusToDone } from \"./Util\";\r\nimport Icon from \"../icons/Icons\";\r\nimport \"./styles.css\";\r\n\r\nclass MyProjects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            projects: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.setStatusToDone = this.setStatusToDone.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getMyProjects();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (sessionStorage.getItem(\"userId\") == \"null\") {\r\n            this.setState({\r\n                projects: [],\r\n            });\r\n        } else {\r\n            this.getMyProjects();\r\n        }\r\n    }\r\n    async getMyProjects() {\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            var result = await getMyProjects(sessionStorage.getItem(\"userId\"));\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            this.setState({\r\n                projects: result,\r\n            });\r\n        }\r\n    }\r\n    async setStatusToDone(e) {\r\n        const isUpdated = await setStatusToDone(e.target.value);\r\n        this.setState({\r\n            update: this.state.update + 1,\r\n        });\r\n        this.getMyProjects();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Utworzone</h1>\r\n                    {this.state.projects.map(\r\n                        (project) =>\r\n                            project.status_id == 1 && (\r\n                                <div className=\"list-project-container\">\r\n                                    <div className=\"project-list-details\">\r\n                                        <div className=\"project-list-price\">\r\n                                            {project.price} PLN\r\n                                        </div>\r\n                                        <div className=\"project-list-category\">\r\n                                            <Icon icon={project.icon} />\r\n                                            <b>\r\n                                                <div>{project.name}</div>\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-skills\">\r\n                                            {project.skills.map((skill) => (\r\n                                                <div>{skill.name}</div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"project-title\">\r\n                                        <b>{project.title}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-desc\">\r\n                                        <p>{project.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <h1>Rozpoczęte</h1>\r\n\r\n                    {this.state.projects.map(\r\n                        (project) =>\r\n                            project.status_id == 2 && (\r\n                                <div className=\"list-project-container\">\r\n                                    <div className=\"project-list-details\">\r\n                                        <div className=\"project-list-author\">\r\n                                            <b>\r\n                                                Wykonawca:{\" \"}\r\n                                                {project.contractor.length !=\r\n                                                    0 &&\r\n                                                    project.contractor[0]\r\n                                                        .login +\r\n                                                        \" - \" +\r\n                                                        project.contractor[0]\r\n                                                            .email}\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-price\">\r\n                                            {project.price} PLN\r\n                                        </div>\r\n                                        <div className=\"project-list-category\">\r\n                                            <Icon icon={project.icon} />\r\n                                            <b>\r\n                                                <div>{project.name}</div>\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-skills\">\r\n                                            {project.skills.map((skill) => (\r\n                                                <div>{skill.name}</div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"project-title\">\r\n                                        <b>{project.title}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-desc\">\r\n                                        <p>{project.description}</p>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"global-button form-button\"\r\n                                        value={project.project_id}\r\n                                        onClick={this.setStatusToDone}\r\n                                    >\r\n                                        Zakończ\r\n                                    </button>\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <h1>Zakończone</h1>\r\n\r\n                    {this.state.projects.map(\r\n                        (project) =>\r\n                            project.status_id == 3 && (\r\n                                <div className=\"list-project-container\">\r\n                                    <div className=\"project-list-details\">\r\n                                        <div className=\"project-list-author\">\r\n                                            <b>\r\n                                                Wykonawca:{\" \"}\r\n                                                {project.contractor.length !=\r\n                                                    0 &&\r\n                                                    project.contractor[0]\r\n                                                        .login +\r\n                                                        \" - \" +\r\n                                                        project.contractor[0]\r\n                                                            .email}\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-price\">\r\n                                            {project.price} PLN\r\n                                        </div>\r\n                                        <div className=\"project-list-category\">\r\n                                            <Icon icon={project.icon} />\r\n                                            <b>\r\n                                                <div>{project.name}</div>\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-skills\">\r\n                                            {project.skills.map((skill) => (\r\n                                                <div>{skill.name}</div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"project-title\">\r\n                                        <b>{project.title}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-desc\">\r\n                                        <p>{project.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MyProjects;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport \"./styles.css\";\r\nimport { getProjectsToDo } from \"./Util\";\r\nimport Icon from \"../icons/Icons\";\r\nclass ProjectsToDo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n            projects: [],\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getProjectsToDo();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (sessionStorage.getItem(\"userId\") == \"null\") {\r\n            this.setState({\r\n                projects: [],\r\n            });\r\n        } else {\r\n            this.getProjectsToDo();\r\n        }\r\n    }\r\n    async getProjectsToDo() {\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            var result = await getProjectsToDo(\r\n                sessionStorage.getItem(\"userId\")\r\n            );\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            this.setState({\r\n                projects: result,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Zaakceptowane</h1>\r\n                    {this.state.projects.map(\r\n                        (project) =>\r\n                            project.status_id == 2 && (\r\n                                <div className=\"list-project-container\">\r\n                                    <div className=\"project-list-details\">\r\n                                        <div className=\"project-list-author\">\r\n                                            <b>\r\n                                                Autor:{\" \"}\r\n                                                {project.login +\r\n                                                    \" - \" +\r\n                                                    project.email}\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-price\">\r\n                                            {project.price} PLN\r\n                                        </div>\r\n                                        <div className=\"project-list-category\">\r\n                                            <Icon icon={project.icon} />\r\n                                            <b>\r\n                                                <div>{project.name}</div>\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-skills\">\r\n                                            {project.skills.map((skill) => (\r\n                                                <div>{skill.name}</div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"project-title\">\r\n                                        <b>{project.title}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-desc\">\r\n                                        <p>{project.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <h1>Zakończone</h1>\r\n\r\n                    {this.state.projects.map(\r\n                        (project) =>\r\n                            project.status_id == 3 && (\r\n                                <div className=\"list-project-container\">\r\n                                    <div className=\"project-list-details\">\r\n                                        <div className=\"project-list-author\">\r\n                                            <b>\r\n                                                Autor:{\" \"}\r\n                                                {project.login +\r\n                                                    \" - \" +\r\n                                                    project.email}\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-price\">\r\n                                            {project.price} PLN\r\n                                        </div>\r\n                                        <div className=\"project-list-category\">\r\n                                            <Icon icon={project.icon} />\r\n                                            <b>\r\n                                                <div>{project.name}</div>\r\n                                            </b>\r\n                                        </div>\r\n                                        <div className=\"project-list-skills\">\r\n                                            {project.skills.map((skill) => (\r\n                                                <div>{skill.name}</div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"project-title\">\r\n                                        <b>{project.title}</b>\r\n                                    </div>\r\n                                    <div className=\"project-list-desc\">\r\n                                        <p>{project.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProjectsToDo;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { getProjectsByDate, deleteProject } from \"./Util\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Icon from \"../icons/Icons\";\r\n\r\nclass ProjectsManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            projects: [],\r\n            update: 0,\r\n            periodOfData: 9999,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.setPeriodOfData = this.setPeriodOfData.bind(this);\r\n        this.deleteProject = this.deleteProject.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getProjectsByDate();\r\n    }\r\n\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (sessionStorage.getItem(\"userId\") == \"null\") {\r\n            this.setState({\r\n                projects: [],\r\n            });\r\n        } else {\r\n            this.getProjectsByDate();\r\n        }\r\n    }\r\n    setPeriodOfData(e) {\r\n        this.setState({ periodOfData: e.target.value });\r\n    }\r\n    async deleteProject(e) {\r\n        await deleteProject(e.target.value);\r\n        this.setState({\r\n            update: this.state.update + 1,\r\n        });\r\n        this.getProjectsByDate();\r\n    }\r\n    async getProjectsByDate() {\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            var result = await getProjectsByDate(this.state.periodOfData);\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            this.setState({\r\n                projects: result,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={1}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Dzień\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={7}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Tydzień\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={31}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Miesiąc\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={365}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Rok\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={9999}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Wszystkie\r\n                    </button>\r\n\r\n                    {this.state.projects.map((project) => (\r\n                        <div className=\"list-project-container\">\r\n                            <div className=\"project-list-details\">\r\n                                <div className=\"project-list-price\">\r\n                                    {project.price} PLN\r\n                                </div>\r\n                                <div className=\"project-list-category\">\r\n                                    <Icon icon={project.icon} />\r\n                                    <b>\r\n                                        <div>{project.name}</div>\r\n                                    </b>\r\n                                </div>\r\n                                <div className=\"project-list-skills\">\r\n                                    {project.skills.map((skill) => (\r\n                                        <div>{skill.name}</div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"project-title\">\r\n                                <b>{project.title}</b>\r\n                            </div>\r\n                            <div className=\"project-list-desc\">\r\n                                <p>{project.description}</p>\r\n                            </div>\r\n                            <button\r\n                                className=\"global-button\"\r\n                                value={project.project_id}\r\n                                onClick={this.deleteProject}\r\n                            >\r\n                                Usuń\r\n                            </button>\r\n\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/editproject\",\r\n                                    state: {\r\n                                        project: project,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <button className=\"global-button\">\r\n                                    Edytuj\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProjectsManager;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { getOffersByDate, deleteOffer } from \"./Util\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Icon from \"../icons/Icons\";\r\n\r\nclass OffersManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            offers: [],\r\n            update: 0,\r\n            periodOfData: 9999,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.setPeriodOfData = this.setPeriodOfData.bind(this);\r\n        this.deleteOffer = this.deleteOffer.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getOffersByDate();\r\n    }\r\n\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n        if (sessionStorage.getItem(\"userId\") == \"null\") {\r\n            this.setState({\r\n                offers: [],\r\n            });\r\n        }\r\n    }\r\n    setPeriodOfData(e) {\r\n        this.setState({ periodOfData: e.target.value });\r\n    }\r\n    async deleteOffer(e) {\r\n        await deleteOffer(e.target.value);\r\n        this.setState({\r\n            update: this.state.update + 1,\r\n        });\r\n        this.getOffersByDate();\r\n    }\r\n    async getOffersByDate() {\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            var result = await getOffersByDate(this.state.periodOfData);\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            this.setState({\r\n                offers: result,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={1}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Dzień\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={7}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Tydzień\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={31}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Miesiąc\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={365}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Rok\r\n                    </button>\r\n                    <button\r\n                        className=\"global-button\"\r\n                        value={9999}\r\n                        onClick={this.setPeriodOfData}\r\n                    >\r\n                        Wszystkie\r\n                    </button>\r\n\r\n                    {this.state.offers.map((offer) => (\r\n                        <div className=\"list-offer-container\">\r\n                            <div className=\"offer-list-details\">\r\n                                <div className=\"offer-list-category\">\r\n                                    <Icon icon={offer.icon} />\r\n                                    <b>\r\n                                        <div>{offer.name}</div>\r\n                                    </b>\r\n                                </div>\r\n                                <div className=\"offer-list-skills\">\r\n                                    {offer.skills.map((skill) => (\r\n                                        <div>{skill.name}</div>\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <div className=\"offer-list-time-price\">\r\n                                    Przewidywany czas pracy:<span> </span>\r\n                                    <b>{offer.estimated_time}</b> dni\r\n                                    <span\r\n                                        style={{\r\n                                            width: \"40px\",\r\n                                            display: \"inline-block\",\r\n                                        }}\r\n                                    ></span>\r\n                                    Proponowana cena: <b>{offer.price}</b> PLN\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"offer-list-desc\">\r\n                                <p>{offer.message}</p>\r\n                            </div>\r\n\r\n                            <button\r\n                                className=\"global-button\"\r\n                                value={offer.offer_id}\r\n                                onClick={this.deleteOffer}\r\n                            >\r\n                                Usuń\r\n                            </button>\r\n\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/editoffer\",\r\n                                    state: {\r\n                                        offer: offer,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <button className=\"global-button\">\r\n                                    Edytuj\r\n                                </button>\r\n                            </Link>\r\n\r\n                            <br />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default OffersManager;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { getUsers, getRoles, deleteUser } from \"./Util\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nclass Admin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            roles: [],\r\n            users: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.getUsers = this.getUsers.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getUsers();\r\n        this.getRoles();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n    }\r\n    async deleteUser(e) {\r\n        await deleteUser(e.target.value);\r\n        this.setState({\r\n            update: this.state.update + 1,\r\n        });\r\n        this.getUsers();\r\n    }\r\n    async getUsers() {\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            var result = await getUsers();\r\n        }\r\n        if (sessionStorage.getItem(\"userId\") != \"null\") {\r\n            this.setState({\r\n                users: result,\r\n            });\r\n        }\r\n    }\r\n    async getRoles() {\r\n        const result = await getRoles();\r\n        this.setState({\r\n            roles: result,\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <table class=\"admin-panel-users-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Login</th>\r\n                                <th>Email</th>\r\n                                <th>Rola</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                            {this.state.users.map((user) => (\r\n                                <tr>\r\n                                    <td>{user.login}</td>\r\n\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.role_name}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            value={user.user_id}\r\n                                            onClick={this.deleteUser}\r\n                                        >\r\n                                            Usuń\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: \"/edituser\",\r\n                                                state: {\r\n                                                    user: user,\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                            <button>Edytuj</button>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/adduser\",\r\n                        }}\r\n                    >\r\n                        <button className=\"global-button\">Dodaj</button>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                        <button className=\"global-button\">Powrót</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { getSkillsByCategoryId } from \"./Util\";\r\nimport \"./offer-checkbox.css\";\r\nimport \"./styles.css\";\r\n\r\nclass EditProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            project: this.props.location.state.project,\r\n            skillsToSelect: [],\r\n            skillsChecked: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.selectSkill = this.selectSkill.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.skillsToSelect();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n    }\r\n    async skillsToSelect() {\r\n        const res = await getSkillsByCategoryId(this.state.project.category_id);\r\n\r\n        this.setState({\r\n            skillsToSelect: res,\r\n        });\r\n        this.prepareCheckboxes();\r\n    }\r\n    prepareCheckboxes() {\r\n        var skills_id = [];\r\n        var checkboxes = document.getElementsByClassName(\r\n            \"edit-skills-checkbox\"\r\n        );\r\n        for (var i = 0; i < checkboxes.length; i++) {\r\n            if ((checkboxes.item(i).name = this.state.project.skills[i])) {\r\n                skills_id.push(this.state.project.skills[i].skill_id);\r\n                checkboxes.item(i).checked = true;\r\n            }\r\n        }\r\n        this.setState({ skillsChecked: skills_id });\r\n    }\r\n    clearCheckboxes() {\r\n        var skills_id = [];\r\n        var checkboxes = document.getElementsByClassName(\r\n            \"edit-skills-checkbox\"\r\n        );\r\n        for (var i = 0; i < checkboxes.length; i++) {\r\n            checkboxes.item(i).checked = false;\r\n        }\r\n        this.setState({ skillsChecked: [] });\r\n    }\r\n    selectSkill(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skillsChecked: [...this.state.skillsChecked, e.target.value],\r\n            });\r\n        } else {\r\n            let remove = this.state.skillsChecked.indexOf(e.target.value);\r\n            this.setState({\r\n                skillsChecked: this.state.skillsChecked.filter(\r\n                    (_, i) => i !== remove\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    async onChangeCategory(categoryId) {\r\n        const res = await getSkillsByCategoryId(categoryId);\r\n        this.setState({\r\n            skillsToSelect: res,\r\n        });\r\n        this.clearCheckboxes();\r\n    }\r\n    handleChange(e) {\r\n        var project = this.state.project;\r\n        switch (e.target.id) {\r\n            case \"edit-category\":\r\n                project.category_id = e.target.value;\r\n                this.onChangeCategory(e.target.value);\r\n                break;\r\n            case \"edit-title\":\r\n                project.title = e.target.value;\r\n                break;\r\n            case \"edit-desc\":\r\n                project.description = e.target.value;\r\n                break;\r\n            case \"edit-price\":\r\n                project.price = e.target.value;\r\n                break;\r\n            case \"edit-status\":\r\n                project.status_id = e.target.value;\r\n                break;\r\n        }\r\n        this.setState({ project: project });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        var body = {\r\n            project_id: this.state.project.project_id,\r\n            category_id: this.state.project.category_id,\r\n            skills: this.state.skillsChecked,\r\n            title: this.state.project.title,\r\n            description: this.state.project.description,\r\n            price: this.state.project.price,\r\n            status_id: this.state.project.status_id,\r\n        };\r\n        const requestOptions = {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/editproject\", requestOptions).then(() =>\r\n            alert(\"Zedytowano\")\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Edytuj projekt</h1>\r\n\r\n                    <form\r\n                        class=\"edit-project-container\"\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div class=\"edit-project-first\">\r\n                            <div class=\"edit-project-category\">\r\n                                <label>Kategoria:</label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"edit-category\"\r\n                                    type=\"number\"\r\n                                    value={this.state.project.category_id}\r\n                                    onChange={this.handleChange}\r\n                                ></input>\r\n                                <br />\r\n                            </div>\r\n                            <div class=\"edit-project-skills\">\r\n                                <br />\r\n                                Posiadane umiejętności:\r\n                                <br />\r\n                                {this.state.skillsToSelect.map((item) => (\r\n                                    <label\r\n                                        class=\"ocontainer\"\r\n                                        key={item.skill_id}\r\n                                    >\r\n                                        {item.name}\r\n                                        <input\r\n                                            key={item.skill_id}\r\n                                            onClick={this.selectSkill}\r\n                                            type=\"checkbox\"\r\n                                            value={item.skill_id}\r\n                                            name={item.name}\r\n                                            className=\"edit-skills-checkbox\"\r\n                                        />\r\n\r\n                                        <span class=\"ocheckmark\"></span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"edit-project-rest\">\r\n                            <div id=\"title\">\r\n                                <label>Tytuł:</label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"edit-title\"\r\n                                    type=\"text\"\r\n                                    value={this.state.project.title}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Treść:</label>\r\n                                <br />\r\n                                <textarea\r\n                                    id=\"edit-desc\"\r\n                                    rows=\"4\"\r\n                                    cols=\"50\"\r\n                                    value={this.state.project.description}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Cena:</label>\r\n                                <br />\r\n\r\n                                <input\r\n                                    id=\"edit-price\"\r\n                                    type=\"number\"\r\n                                    value={this.state.project.price}\r\n                                    onChange={this.handleChange}\r\n                                ></input>\r\n                            </div>\r\n                            <div i>\r\n                                <label>Status:</label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"edit-status\"\r\n                                    type=\"number\"\r\n                                    value={this.state.project.status_id}\r\n                                ></input>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <button className=\"global-button\" type=\"submit\">\r\n                            Wyślij\r\n                        </button>\r\n                        <Link to=\"/projectsmanager\">\r\n                            <button className=\"global-button\">Powrót</button>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditProject;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { getSkillsByCategoryId } from \"./Util\";\r\nimport \"./offer-checkbox.css\";\r\nimport \"./styles.css\";\r\n\r\nclass EditOffer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            offer: this.props.location.state.offer,\r\n            skillsToSelect: [],\r\n            skillsChecked: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.selectSkill = this.selectSkill.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.skillsToSelect();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n    }\r\n    async skillsToSelect() {\r\n        const res = await getSkillsByCategoryId(this.state.offer.category_id);\r\n\r\n        this.setState({\r\n            skillsToSelect: res,\r\n        });\r\n        this.prepareCheckboxes();\r\n    }\r\n    prepareCheckboxes() {\r\n        var skills_id = [];\r\n        var checkboxes = document.getElementsByClassName(\r\n            \"edit-skills-checkbox\"\r\n        );\r\n        for (var i = 0; i < checkboxes.length; i++) {\r\n            if ((checkboxes.item(i).name = this.state.offer.skills[i])) {\r\n                skills_id.push(this.state.offer.skills[i].skill_id);\r\n                checkboxes.item(i).checked = true;\r\n            }\r\n        }\r\n        this.setState({ skillsChecked: skills_id });\r\n    }\r\n    clearCheckboxes() {\r\n        var skills_id = [];\r\n        var checkboxes = document.getElementsByClassName(\r\n            \"edit-skills-checkbox\"\r\n        );\r\n        for (var i = 0; i < checkboxes.length; i++) {\r\n            checkboxes.item(i).checked = false;\r\n        }\r\n        this.setState({ skillsChecked: [] });\r\n    }\r\n    selectSkill(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skillsChecked: [...this.state.skillsChecked, e.target.value],\r\n            });\r\n        } else {\r\n            let remove = this.state.skillsChecked.indexOf(e.target.value);\r\n            this.setState({\r\n                skillsChecked: this.state.skillsChecked.filter(\r\n                    (_, i) => i !== remove\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    async onChangeCategory(categoryId) {\r\n        const res = await getSkillsByCategoryId(categoryId);\r\n        this.setState({\r\n            skillsToSelect: res,\r\n        });\r\n        this.clearCheckboxes();\r\n    }\r\n    handleChange(e) {\r\n        var offer = this.state.offer;\r\n        switch (e.target.id) {\r\n            case \"edit-category\":\r\n                offer.category_id = e.target.value;\r\n                this.onChangeCategory(e.target.value);\r\n                break;\r\n            case \"edit-message\":\r\n                offer.message = e.target.value;\r\n                break;\r\n            case \"edit-time\":\r\n                offer.estimated_time = e.target.value;\r\n                break;\r\n            case \"edit-price\":\r\n                offer.price = e.target.value;\r\n                break;\r\n        }\r\n        this.setState({ offer: offer });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        var body = {\r\n            offer_id: this.state.offer.offer_id,\r\n            category_id: this.state.offer.category_id,\r\n            skills: this.state.skillsChecked,\r\n            message: this.state.offer.message,\r\n            price: this.state.offer.price,\r\n            estimated_time: this.state.offer.estimated_time,\r\n        };\r\n        const requestOptions = {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/editoffer\", requestOptions).then(() =>\r\n            alert(\"Zedytowano\")\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Edytuj ofertę</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div class=\"edit-offer-first\">\r\n                            <label>Kategoria:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-category\"\r\n                                type=\"number\"\r\n                                value={this.state.offer.category_id}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <div class=\"edit-offer-skills\">\r\n                                <br />\r\n                                Posiadane umiejętności:\r\n                                <br />\r\n                                {this.state.skillsToSelect.map((item) => (\r\n                                    <label\r\n                                        class=\"ocontainer\"\r\n                                        key={item.skill_id}\r\n                                    >\r\n                                        {item.name}\r\n                                        <input\r\n                                            key={item.skill_id}\r\n                                            onClick={this.selectSkill}\r\n                                            type=\"checkbox\"\r\n                                            value={item.skill_id}\r\n                                            name={item.name}\r\n                                            className=\"edit-skills-checkbox\"\r\n                                        />\r\n                                        <span class=\"ocheckmark\"></span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"edit-offer-rest\">\r\n                            <label>Treść:</label>\r\n                            <br />\r\n                            <textarea\r\n                                id=\"edit-message\"\r\n                                rows=\"4\"\r\n                                cols=\"50\"\r\n                                value={this.state.offer.message}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                            <label>Szacowany czas:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-time\"\r\n                                type=\"number\"\r\n                                value={this.state.offer.estimated_time}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <label>Proponowany koszt:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-price\"\r\n                                type=\"number\"\r\n                                value={this.state.offer.price}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <button className=\"global-button\" type=\"submit\">\r\n                            Wyślij\r\n                        </button>\r\n                        <Link to=\"/offersmanager\">\r\n                            <button className=\"global-button\">Powrót</button>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditOffer;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { getRoles } from \"./Util\";\r\nimport \"./styles.css\";\r\nvar SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            user: this.props.location.state.user,\r\n            roles: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        var user = this.state.user;\r\n        user.newpassword = \"\";\r\n        this.setState({ user: user });\r\n        this.getRoles();\r\n    }\r\n\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n    }\r\n    async getRoles() {\r\n        const result = await getRoles();\r\n        this.setState({\r\n            roles: result,\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        var user = this.state.user;\r\n        switch (e.target.id) {\r\n            case \"edit-login\":\r\n                user.login = e.target.value;\r\n                break;\r\n            case \"edit-password\":\r\n                user.newpassword = e.target.value;\r\n                break;\r\n            case \"edit-email\":\r\n                user.email = e.target.value;\r\n                break;\r\n            case \"edit-role\":\r\n                user.role_id = e.target.value;\r\n                break;\r\n        }\r\n        this.setState({ user: user });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.user.newpassword.length > 4) {\r\n            var user = this.state.user;\r\n            user.password = SHA256(this.state.user.newpassword).toString();\r\n            this.setState({ user: user });\r\n        }\r\n        var body = {\r\n            user_id: this.state.user.user_id,\r\n            login: this.state.user.login,\r\n            password: this.state.user.password,\r\n            email: this.state.user.email,\r\n            role_id: this.state.user.role_id,\r\n        };\r\n        const requestOptions = {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/edituser\", requestOptions).then(() =>\r\n            alert(\"Zedytowano\")\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Edytuj użytkownika</h1>\r\n                    {sessionStorage.getItem(\"userId\") != \"null\" && (\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>Login:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-login\"\r\n                                type=\"text\"\r\n                                value={this.state.user.login}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Hasło:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-password\"\r\n                                type=\"password\"\r\n                                placeholder=\"*******\"\r\n                                minlength=\"5\"\r\n                                value={this.state.user.newpassword}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Email:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-email\"\r\n                                type=\"email\"\r\n                                value={this.state.user.email}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Rola:</label>\r\n                            <br />\r\n                            {this.state.roles.length != 0 && (\r\n                                <select id=\"edit-role\">\r\n                                    <option value={this.state.roles[0].role_id}>\r\n                                        {this.state.roles[0].name}\r\n                                    </option>\r\n                                    <option value={this.state.roles[1].role_id}>\r\n                                        {this.state.roles[1].name}\r\n                                    </option>\r\n                                    <option value={this.state.roles[2].role_id}>\r\n                                        {this.state.roles[2].name}\r\n                                    </option>\r\n                                </select>\r\n                            )}\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <button className=\"global-button\" type=\"submit\">\r\n                                Wyślij\r\n                            </button>\r\n                            <Link to=\"/admin\">\r\n                                <button className=\"global-button\">\r\n                                    Powrót\r\n                                </button>\r\n                            </Link>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddUser;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { getRoles } from \"./Util\";\r\nimport \"./styles.css\";\r\nvar SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass EditUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"isLogged\"),\r\n            user: { login: \"\", password: \"\", email: \"\", role_id: 2 },\r\n            roles: [],\r\n            update: 0,\r\n        };\r\n        this.changeLoginStatus = this.changeLoginStatus.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles();\r\n    }\r\n    changeLoginStatus() {\r\n        this.setState({\r\n            isLogged: sessionStorage.getItem(\"isLogged\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n        });\r\n    }\r\n    async getRoles() {\r\n        const result = await getRoles();\r\n        this.setState({\r\n            roles: result,\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        var user = this.state.user;\r\n        switch (e.target.id) {\r\n            case \"edit-login\":\r\n                user.login = e.target.value;\r\n                break;\r\n            case \"edit-password\":\r\n                user.password = e.target.value;\r\n                break;\r\n            case \"edit-email\":\r\n                user.email = e.target.value;\r\n                break;\r\n            case \"edit-role\":\r\n                user.role_id = e.target.value;\r\n                break;\r\n        }\r\n        this.setState({ user: user });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (\r\n            this.state.user.login.length == 0 &&\r\n            this.state.user.password.length == 0 &&\r\n            this.state.user.email.length == 0\r\n        ) {\r\n            return alert(\"Wprowadź dane\");\r\n        }\r\n        if (this.state.user.password.length > 4) {\r\n            var user = this.state.user;\r\n            user.password = SHA256(this.state.user.password).toString();\r\n            this.setState({ user: user });\r\n        } else {\r\n            return alert(\"Wprowadź dane\");\r\n        }\r\n        var body = {\r\n            login: this.state.user.login,\r\n            password: this.state.user.password,\r\n            mail: this.state.user.email,\r\n            role: this.state.user.role_id,\r\n        };\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(\"http://localhost:8080/register\", requestOptions).then(() =>\r\n            alert(\"Dodano\")\r\n        );\r\n        var user = this.state.user;\r\n        user.login = \"\";\r\n        user.password = \"\";\r\n        user.email = \"\";\r\n        user.role_id = 2;\r\n        this.setState({ user: user });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-background\">\r\n                <div className=\"global-content\">\r\n                    <Nav\r\n                        isLogged={this.state.isLogged}\r\n                        changeStatus={this.changeLoginStatus}\r\n                    />\r\n                    <h1>Dodaj użytkownika</h1>\r\n                    {sessionStorage.getItem(\"userId\") != \"null\" && (\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>Login:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-login\"\r\n                                type=\"text\"\r\n                                minlength=\"5\"\r\n                                value={this.state.user.login}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Hasło:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-password\"\r\n                                type=\"password\"\r\n                                placeholder=\"*******\"\r\n                                minlength=\"5\"\r\n                                value={this.state.user.password}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Email:</label>\r\n                            <br />\r\n                            <input\r\n                                id=\"edit-email\"\r\n                                type=\"email\"\r\n                                minlength=\"5\"\r\n                                value={this.state.user.email}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            <br />\r\n                            <br />\r\n                            <label>Rola:</label>\r\n                            <br />\r\n                            {this.state.roles.length != 0 && (\r\n                                <select id=\"edit-role\">\r\n                                    <option value={this.state.roles[0].role_id}>\r\n                                        {this.state.roles[0].name}\r\n                                    </option>\r\n                                    <option value={this.state.roles[1].role_id}>\r\n                                        {this.state.roles[1].name}\r\n                                    </option>\r\n                                    <option\r\n                                        selected=\"selected\"\r\n                                        value={this.state.roles[2].role_id}\r\n                                    >\r\n                                        {this.state.roles[2].name}\r\n                                    </option>\r\n                                </select>\r\n                            )}\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <button className=\"global-button\" type=\"submit\">\r\n                                Wyślij\r\n                            </button>\r\n                            <Link to=\"/admin\">\r\n                                <button className=\"global-button\">\r\n                                    Powrót\r\n                                </button>\r\n                            </Link>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditUser;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Create from \"./components/Create\";\r\nimport Browse from \"./components/Browse\";\r\nimport List from \"./components/List\";\r\nimport Project from \"./components/Project\";\r\nimport MyProjects from \"./components/MyProjects.js\";\r\nimport ProjectsToDo from \"./components/ProjectsToDo.js\";\r\nimport ProjectsManager from \"./components/ProjectsManager.js\";\r\nimport OffersManager from \"./components/OffersManager.js\";\r\nimport Admin from \"./components/Admin.js\";\r\nimport EditProject from \"./components/EditProject.js\";\r\nimport EditOffer from \"./components/EditOffer.js\";\r\nimport EditUser from \"./components/EditUser.js\";\r\nimport AddUser from \"./components/AddUser.js\";\r\nimport \"./components/styles.css\";\r\nimport \"./fonts/fonts.css\";\r\nimport \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/create\" component={Create} />\r\n                    <Route path=\"/browse\" component={Browse} />\r\n                    <Route path=\"/list\" component={List} />\r\n                    <Route path=\"/project\" component={Project} />\r\n                    <Route path=\"/myprojects\" component={MyProjects} />\r\n                    <Route path=\"/projectstodo\" component={ProjectsToDo} />\r\n                    <Route\r\n                        path=\"/projectsmanager\"\r\n                        component={ProjectsManager}\r\n                    />\r\n                    <Route path=\"/offersmanager\" component={OffersManager} />\r\n                    <Route path=\"/editproject\" component={EditProject} />\r\n                    <Route path=\"/editoffer\" component={EditOffer} />\r\n                    <Route path=\"/admin\" component={Admin} />\r\n                    <Route path=\"/edituser\" component={EditUser} />\r\n                    <Route path=\"/adduser\" component={AddUser} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}